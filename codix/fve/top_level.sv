/******************************************************************************
 *     "Copyright (C) 2013, ApS s.r.o Brno, All Rights Reserved"             *
 ******************************************************************************/
/**
 *  \file
 *  \date   Mon Mar  4 13:49:04 2013, generated by Codasip HW generator v2.0.0.
 *  \brief  OVM top module of the verification environment
 */

// The topmost encapsulation level of the verification
module codix_ca_top;

    import ovm_pkg::*;
    import sv_codix_ca_param_pkg::*;
    import sv_codix_ca_seq_pkg::*;
    import sv_codix_ca_golden_model_pkg::*;
    import sv_codix_ca_env_pkg::*;
    import sv_codix_ca_test_pkg::*;
    import sv_codix_ca_dpi_pkg::*;

    // Reset and clock signals
    logic CLK = 1;
    logic RST = 1;

    // DUT instance
    DUT dut( CLK, RST );

    // software version of verification environment
    if (VER_ENV == SW_FULL) begin


        // clock generation
        always #(CLK_PERIOD/2) CLK = ~CLK;

        // reset at the start of the simulation
        initial begin
            RST = 0;
            #(RESET_TIME);
            RST = ~RST;
	end

	// customize the default printer
	initial begin
		automatic ovm_table_printer printer = new;
		printer.knobs.begin_elements = -1;
		printer.knobs.value_width = -1;
		printer.knobs.name_width = 53;
		ovm_default_printer = printer;
		$timeformat(-9, 3, " ns", 8);
	end

	// create interface wrapper and run the test.
	initial begin
		// DUT Interface Wrapper
		automatic DutIfWrapper if_wrapper = new( "if_wrapper",
			dut.icodix_ca_core_regs_if, 
			dut.icodix_ca_core_main_instr_hw_instr_hw_if, 
			dut.icodix_ca_mem_if, 
			dut.ihalt_if, 
			dut.icodix_ca_in_if, 
			dut.icodix_ca_out_if, 
			dut.icodix_ca_inout_if );
		// registration of DUT interface wrapper in configuration table
		set_config_object( "*", "if_wrapper", if_wrapper, 0 );
		// start of the simulation
		run_test( "codix_ca_test" );
	end

    end

    // hw accelerated version
    else if (VER_ENV == SW_HW) begin
	// customize the default printer
	initial begin
		automatic ovm_table_printer printer = new;
		printer.knobs.begin_elements = -1;
		printer.knobs.value_width = -1;
		printer.knobs.name_width = 53;
		ovm_default_printer = printer;
		$timeformat(-9, 3, " ns", 8);

		// start of the simulation
		run_test( "codix_ca_test" );
	end

    end

endmodule: codix_ca_top
